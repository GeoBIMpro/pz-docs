# pz-logger

The Logger provides a system-wide, common way to record log messages.

The log messages are only stored in-memory today, but eventually they will be sent to `logstash`.

## Command Line App

The service is started as a command line app:

    $ pz-logger

## HTTP API

### POST /v1/messages

Sends a message to be logged. The message is given in the POST body as a JSON object:

    {
        "service":  "log-tester",
        "address":  "128.1.2.3",
        "stamp":    123456789,
        "severity": "Info",
        "message":  "The quick brown fox" 
    }

All five fields are required.

`stamp` is an `int64` value representing the number of seconds since the Unix epoch. In Go, `time.Now().Unix()`.

`severity` must be one of the following strings:

* **"Debug"** - _Only used during development, for debugging/tracing purposes._
* **"Info"** _- No action needed, I'm just being chatty and keeping you in the loop._
* **"Warning"** _- Something occurred which probably shouldn't have. I’m going to handle it for you this time, but you really should have this looked at by someone soon._
* **"Error"** - _I can’t do this. I've handled the exception so I’m not going to crash or anything, but I want you to know that I may not be in a happy place right now._
* **"Fatal"** - _I’m sorry, Dave. I’m afraid I can’t do that. System crashing, or likely to crash very soon._

### GET /v1/messages?size=N&from=N

Returns a JSON array of log messages:

    [
        {"service":"noservice","address":"1.2.3.4","stamp":123456789,"severity":"Debug","message":"Yow!"},
        {"service":"noservice","address":"01.2.3.4","stamp":123456788,"severity":"Debug","message":"Yow!"}
    ]

This endpoint supports pagination, as described in [[General Pz Service Operations]].

### Common operations

This service includes the common endpoints described in [[General Pz Service Operations]].

The `admin settings` supported are:

    {
        "debug": "true"
    }

The `admin stats` supported are:

    {
        "starttime": "....",
    }
