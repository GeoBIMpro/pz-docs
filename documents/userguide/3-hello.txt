# Hello, Piazza!

We now describe each of the major Piazza features. We will provide a text description of the what the
feature does and an example of how to use the feature's REST API via the Gateway.

The code examples are presented as extracts of shell scripts using `curl` to make the HHTP calls, JSON for
the payloads and returned objects, and in some cases other shell magic to extract resource ids or validate
the results. Because they are just extracts of scripts, however, they may not work with a simple copy-paste:
in most cases this because `$domain` needs to be set to point to your instance of Piazza.footnote:[This will
be handled more cleanly in a future release.] You can find the complete scripts in Piazza's `pz-docs` repository.
Those scripts are regularly tested against the current Piazza build, so they should work as advertised:
if they do not, please contact the Piazza team.

IMPORTANT: Security concerns such as authentication and authorization 
are not yet addressed in this tutorial. Contact the Piazza team for current information.

We will begin with a simple "health check" ping to the Gateway to verify that we have a functioning instance of
Piazza to talk to.

[source,sh]
.link:scripts/hi-full.sh[hi-full.sh]
----
include::scripts/hi-full.sh[]
----

The script requires that you set the $DOMAIN environment variable to the domain of the Piazza system you are
using. Contact the Piazza team if you are unsure what your domain should be.

In the examples that follow, we will only show the portions of the script that are relevant, typically
omitting the setup and teardown code. The above script will just be: 

[source,sh]
.link:scripts/hi.sh[hi.sh]
----
include::scripts/hi.sh[tags=public]
----

NOTE: You should verify that the health check script works before continuing with this tutorial.

## Additional Resources

As you work through this tutorial, you might find these two Piazza resources helpful:

* `pz-swagger.<domain>` is a browser-based UI for exploring Piazza's REST API. (If you are not familiar
with Swagger, see http://swagger.io[swagger.io].)

* `pz-sak.<domain>` is a developer-level tool for directly interacting with some of Piazza's public
and private services: for example, you can use SAK to examine log files, check the status of jobs, and
perform metadata queries. SAK is an internal tool for debugging and testing only; it is not to be
used in production. Contact the Piazza team for assistance with SAK.
