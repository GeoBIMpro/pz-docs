#!/usr/bin/groovy

node {
  def root = pwd()
  def mvn = tool 'M3'
  def zapHome = tool 'ZAProxy_v2_5_0'
  def nodejs = tool 'NodeJS_6'
  def appvers = sh(script: "git describe --long --tags --always | sed 's/\\./-/'g", returnStdout: true)
  appvers = appvers.trim()
  def appName = "pz-jobmanager-${appvers}"

  /*
	//old
  stage('Setup') {
    git([
      url: env.GIT_URL ? env.GIT_URL : 'https://github.com/venicegeo/pz-docs',
      branch: "master"
    ])
  }
  */

  //new
  stage('Setup') {
    deleteDir()
    // github is open gitlab requires credentials to clone
    if(env.GITLAB_CREDS) {
      git url: "${env.GIT_URL}", branch: "${env.GIT_BRANCH}", credentialsId: "${env.GITLAB_CREDS}"
    } else {
      git url: "${env.GIT_URL}", branch: "${env.GIT_BRANCH}"
    }
  }
  
  //old way
  stage('Archive') {
    withRvm(rubyVersion: '2.4.0') {
      sh """
        ./ci/archive.sh
      """
    }
    //mavenPush()
  }

  //old push to INT
  stage ('CI Deploy') {
    cfPush()
    cfBgDeploy()
  }
  
  //old way
  stage('Reset') {
    git([
      url: env.GIT_URL ? env.GIT_URL : 'https://github.com/venicegeo/pz-docs',
      branch: "master"
    ])
  }

  //old way
  stage('Staging Deploy') {
    cfPush {
      cfDomain  = 'stage.geointservices.io'
      cfSpace   = 'stage'
    }
    cfBgDeploy {
      cfDomain  = 'stage.geointservices.io'
      cfSpace   = 'stage'
    }
  }

  //old way
  stage ('Cleanup') {
    deleteDir()
  }
}
